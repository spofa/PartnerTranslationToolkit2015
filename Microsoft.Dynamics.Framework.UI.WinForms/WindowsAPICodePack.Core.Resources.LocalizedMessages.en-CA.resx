<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpandingStateCannotBeChanged" xml:space="preserve">
    <value>Expanding state of the dialogue cannot be changed while dialogue is showing.</value>
  </data>
  <data name="MessageManagerHandlerNotRegistered" xml:space="preserve">
    <value>The specified event handler has not been registered.</value>
  </data>
  <data name="TaskDialogButtonTextEmpty" xml:space="preserve">
    <value>Button text must be non-empty.</value>
  </data>
  <data name="CoreHelpersRunningOnVista" xml:space="preserve">
    <value>Only supported on Windows 7 or Windows Vista.</value>
  </data>
  <data name="InvalidReferencePath" xml:space="preserve">
    <value>Reference path is not valid.</value>
  </data>
  <data name="PropertyKeyFormatString" xml:space="preserve">
    <value>{0}, {1}</value>
  </data>
  <data name="PowerExecutionStateFailed" xml:space="preserve">
    <value>SetThreadExecutionState call failed.</value>
  </data>
  <data name="NativeTaskDialogConfigurationError" xml:space="preserve">
    <value>An error has occurred in dialogue configuration.</value>
  </data>
  <data name="DialogCollectionCannotHaveDuplicateNames" xml:space="preserve">
    <value>Dialogue cannot have more than one control with the same name.</value>
  </data>
  <data name="ApplicationRecoveryFailedToRegister" xml:space="preserve">
    <value>Application failed to register for recovery.</value>
  </data>
  <data name="HyperlinksCannotBetSet" xml:space="preserve">
    <value>Hyperlinks cannot be enabled/disabled while dialogue is showing.</value>
  </data>
  <data name="ApplicationRecoveryBadParameters" xml:space="preserve">
    <value>Application was not registered for recovery due to bad parameters.</value>
  </data>
  <data name="TaskDialogDefaultMainInstruction" xml:space="preserve">
    <value />
  </data>
  <data name="PowerInsufficientAccessCapabilities" xml:space="preserve">
    <value>The caller had insufficient access rights to get the system power capabilities.</value>
  </data>
  <data name="DialogCollectionControlAlreadyHosted" xml:space="preserve">
    <value>Dialogue control must be removed from current collections first.</value>
  </data>
  <data name="TaskDialogCloseNonShowing" xml:space="preserve">
    <value>Attempting to close a non-showing dialogue.</value>
  </data>
  <data name="CancelableCannotBeChanged" xml:space="preserve">
    <value>Cancellable cannot be changed while dialogue is showing.</value>
  </data>
  <data name="ApplicationRecoveryFailedToUnregister" xml:space="preserve">
    <value>Unregister for recovery failed.</value>
  </data>
  <data name="DialogControlNameCannotBeEmpty" xml:space="preserve">
    <value>Dialogue control name cannot be empty or null.</value>
  </data>
  <data name="ApplicationRecoveryMustBeCalledFromCallback" xml:space="preserve">
    <value>This method must be called from the registered callback method.</value>
  </data>
  <data name="PropVariantInitializationError" xml:space="preserve">
    <value>Cannot initialize PropVariant.</value>
  </data>
  <data name="PropVariantUnsupportedType" xml:space="preserve">
    <value>Cannot be cast to unsupported type.</value>
  </data>
  <data name="PropVariantTypeNotSupported" xml:space="preserve">
    <value>This Value type is not supported.</value>
  </data>
  <data name="ApplicationRecoveryFailedToUnregisterForRestart" xml:space="preserve">
    <value>Unregister for restart failed.</value>
  </data>
  <data name="ExpandedDetailsCannotBeChanged" xml:space="preserve">
    <value>Expanded information mode cannot be changed while dialogue is showing.</value>
  </data>
  <data name="StartupLocationCannotBeChanged" xml:space="preserve">
    <value>Cannot change the startup location while a dialogue box is open.</value>
  </data>
  <data name="OwnerCannotBeChanged" xml:space="preserve">
    <value>Dialogue owner cannot be changed while dialog is showing.</value>
  </data>
  <data name="TaskDialogUnkownControl" xml:space="preserve">
    <value>This type is an unknown dialogue control.</value>
  </data>
  <data name="TaskDialogSupportedButtonsAndButtons" xml:space="preserve">
    <value>Dialogue cannot display both non-standard buttons and standard buttons.</value>
  </data>
  <data name="TaskDialogSupportedButtonsAndLinks" xml:space="preserve">
    <value>Dialogue cannot display both non-standard buttons and command links.</value>
  </data>
  <data name="CheckBoxCannotBeChanged" xml:space="preserve">
    <value>CheckBox text cannot be changed while dialogue is showing.</value>
  </data>
  <data name="DialogCollectionModifyShowingDialog" xml:space="preserve">
    <value>You cannot modify a controls collection while a dialogue box is open.</value>
  </data>
  <data name="NativeTaskDialogInternalErrorComplex" xml:space="preserve">
    <value>Dialogue contents too complex.</value>
  </data>
  <data name="NativeTaskDialogVersionError" xml:space="preserve">
    <value>TaskDialog feature has to load version 6 of comctl32.dll, but a different version is currently loaded.</value>
  </data>
  <data name="CaptionCannotBeChanged" xml:space="preserve">
    <value>Dialogue caption cannot be changed while dialog is showing.</value>
  </data>
  <data name="CollapsedTextCannotBeChanged" xml:space="preserve">
    <value>Collapsed control text cannot be changed while dialogue is showing.</value>
  </data>
  <data name="DialogDefaultMainInstruction" xml:space="preserve">
    <value />
  </data>
  <data name="PowerManagerBatteryNotPresent" xml:space="preserve">
    <value>Battery is not present on this system.</value>
  </data>
  <data name="TaskDialogOnlyOneDefaultControl" xml:space="preserve">
    <value>Cannot have more than one default button of a given type.</value>
  </data>
  <data name="PowerInsufficientAccessBatteryState" xml:space="preserve">
    <value>The caller had insufficient access rights to get the system battery state.</value>
  </data>
  <data name="TaskDialogProgressBarValueInRange" xml:space="preserve">
    <value>Value provided must be greater than equal to the minimum value and less than the maximum value.</value>
  </data>
  <data name="TaskDialogBadButtonId" xml:space="preserve">
    <value>Bad button ID in closing event.</value>
  </data>
  <data name="ProgressBarCannotBeChanged" xml:space="preserve">
    <value>Cannot change a progress bar while a dialogue box is open.</value>
  </data>
  <data name="ProgressBarCannotBeHostedInMultipleDialogs" xml:space="preserve">
    <value>Cannot host a progress bar in multiple dialogue boxes.</value>
  </data>
  <data name="PropVariantMultiDimArray" xml:space="preserve">
    <value>Multidimensional SafeArrays are not supported.</value>
  </data>
  <data name="CoreHelpersRunningOnXp" xml:space="preserve">
    <value>Only supported on Windows 7 or Windows Vista.</value>
  </data>
  <data name="StandardButtonsCannotBeChanged" xml:space="preserve">
    <value>Cannot change StandardButtons while a dialogue box is open.</value>
  </data>
  <data name="PowerManagerActiveSchemeFailed" xml:space="preserve">
    <value>Failed to get active power scheme.</value>
  </data>
  <data name="DialogCollectionControlNameNull" xml:space="preserve">
    <value>Control name cannot be null or zero length.</value>
  </data>
  <data name="TaskDialogDefaultCaption" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="DialogDefaultContent" xml:space="preserve">
    <value />
  </data>
  <data name="CoreHelpersRunningOn7" xml:space="preserve">
    <value>Only supported on Windows 7.</value>
  </data>
  <data name="TaskDialogProgressBarMaxValueGreaterThanMin" xml:space="preserve">
    <value>The maximum value must be greater than the minimum value.</value>
  </data>
  <data name="NativeTaskDialogInternalErrorArgs" xml:space="preserve">
    <value>Invalid arguments to Win32 call.</value>
  </data>
  <data name="ExpandedLabelCannotBeChanged" xml:space="preserve">
    <value>Expanded control label cannot be changed while dialogue is showing.</value>
  </data>
  <data name="DialogControlsCannotBeRenamed" xml:space="preserve">
    <value>Dialogue controls cannot be renamed.</value>
  </data>
  <data name="TaskDialogProgressBarMinValueGreaterThanZero" xml:space="preserve">
    <value>The minimum value must be a positive number.</value>
  </data>
  <data name="PropVariantNullString" xml:space="preserve">
    <value>String argument cannot be null or empty.</value>
  </data>
  <data name="TaskDialogCheckBoxTextRequiredToEnableCheckBox" xml:space="preserve">
    <value>Checkbox text must be provided to enable the dialogue checkbox.</value>
  </data>
  <data name="TaskDialogProgressBarMinValueLessThanMax" xml:space="preserve">
    <value>The minimum value must be less than the maximum value.</value>
  </data>
  <data name="ApplicationRecoveryFailedToRegisterForRestart" xml:space="preserve">
    <value>Application failed to registered for restart.</value>
  </data>
  <data name="TaskDialogDefaultContent" xml:space="preserve">
    <value />
  </data>
  <data name="ApplicationRecoverFailedToRegisterForRestartBadParameters" xml:space="preserve">
    <value>Failed to register application for restart due to bad parameters.</value>
  </data>
  <data name="DialogDefaultCaption" xml:space="preserve">
    <value>Application</value>
  </data>
</root>