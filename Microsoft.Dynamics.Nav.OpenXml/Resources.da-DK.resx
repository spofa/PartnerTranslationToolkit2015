<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WorksheetAlreadyExistError" xml:space="preserve">
    <value>Regnearket findes allerede.</value>
  </data>
  <data name="RangeAlreadyExistError" xml:space="preserve">
    <value>Intervallet findes allerede.</value>
  </data>
  <data name="FilenameTypeError" xml:space="preserve">
    <value>Dokumenttypen er ugyldig. Kontrollér filtypenavnet.</value>
  </data>
  <data name="UriArgumentError" xml:space="preserve">
    <value>Du skal angive et gyldigt hyperlink.</value>
  </data>
  <data name="FilenameAlreadyExistError" xml:space="preserve">
    <value>Filnavnet findes allerede.</value>
  </data>
  <data name="CustomPropertiesArgumentError" xml:space="preserve">
    <value>En brugerdefineret egenskabssamling kan ikke være null.</value>
  </data>
  <data name="RangeNameNotFoundError" xml:space="preserve">
    <value>Intervalnavnet blev ikke fundet.</value>
  </data>
  <data name="DataElementPathCouldNotBeFound" xml:space="preserve">
    <value>{0} har en ugyldig sti. Påkrævede elementer eller sektioner i XML-skemaet mangler måske.</value>
  </data>
  <data name="EnumeratorOutOfRangeError" xml:space="preserve">
    <value>Optælleren er ikke gyldig.</value>
  </data>
  <data name="CustomXmlPartWithNoRoot" xml:space="preserve">
    <value>Den brugerdefinerede XML-del indeholder ikke et rodelement.</value>
  </data>
  <data name="PathArgumentError" xml:space="preserve">
    <value>Du skal angive en gyldig sti.</value>
  </data>
  <data name="CustomXmlInvalidNamespaceBinding" xml:space="preserve">
    <value>{0} har et ugyldigt navneområde {1}.</value>
  </data>
  <data name="RangeValueNotSpecifiedError" xml:space="preserve">
    <value>Angiv en intervalværdi.</value>
  </data>
  <data name="FilenameNotSpecifiedError" xml:space="preserve">
    <value>Angiv et filnavn.</value>
  </data>
  <data name="WorksheetNotFoundError" xml:space="preserve">
    <value>Regnearket blev ikke fundet.</value>
  </data>
  <data name="WorksheetPartNotFoundError" xml:space="preserve">
    <value>Denne WorksheetPart blev ikke fundet.</value>
  </data>
  <data name="NumberingFormatsError" xml:space="preserve">
    <value>Det brugerdefinerede nummererings-id-format skal starte ved {0} og skal angives i rækkefølge.</value>
  </data>
  <data name="ColumnNameSizeError" xml:space="preserve">
    <value>Kolonnenavnet skal have en bredde på mindst 1.</value>
  </data>
  <data name="ColumnLetterError" xml:space="preserve">
    <value>Kolonneoverskriften {0} skal være et bogstav mellem 'A' og 'Z'.</value>
  </data>
  <data name="CustomXmlElementRemovedInDesign" xml:space="preserve">
    <value>Den brugerdefinerede XML-del i Word-layoutdokumentet har en reference til et felt eller DataItem med stien {0}. Dette element er fjernet fra rapportdatasættet.</value>
  </data>
  <data name="IncompatibleWorkbookError" xml:space="preserve">
    <value>Microsoft Excel-projektmappen kan ikke åbnes. Den kan skyldes et af følgende:
1. Filstien er en webadresse. Du skal navigere til filen via dialogboksen Åbn fil, eller du kan gemme filen lokalt og derefter åbne den.
2. Projektmappen er ikke gemt i et Open XML-filformat. Gem projektmappen som en Excel-projektmappe (.xlsx-fil) i Microsoft Excel, og prøv derefter at udføre anmodningen igen.
Der opstod følgende fejl: {0}.</value>
  </data>
  <data name="CorruptSpreadsheetDocumentError" xml:space="preserve">
    <value>Projektmappen er beskadiget. Der opstod følgende fejl: {0}.</value>
  </data>
  <data name="ColumnNameNotSpecifiedError" xml:space="preserve">
    <value>Angiv et kolonnenavn.</value>
  </data>
  <data name="DataValidationFormulaNotSpecifiedError" xml:space="preserve">
    <value>Angiv en datavalideringsværdi.</value>
  </data>
  <data name="RangeNameNotSpecifiedError" xml:space="preserve">
    <value>Angiv et intervalnavn.</value>
  </data>
</root>