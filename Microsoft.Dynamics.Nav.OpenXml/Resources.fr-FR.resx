<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WorksheetAlreadyExistError" xml:space="preserve">
    <value>La feuille de calcul existe déjà.</value>
  </data>
  <data name="RangeAlreadyExistError" xml:space="preserve">
    <value>La plage existe déjà.</value>
  </data>
  <data name="FilenameTypeError" xml:space="preserve">
    <value>Le type de document n'est pas valide. Vérifiez l'extension de fichier.</value>
  </data>
  <data name="UriArgumentError" xml:space="preserve">
    <value>Un hyperlien valide est requis.</value>
  </data>
  <data name="FilenameAlreadyExistError" xml:space="preserve">
    <value>Le nom de fichier existe déjà.</value>
  </data>
  <data name="CustomPropertiesArgumentError" xml:space="preserve">
    <value>La collection de propriété personnalisée ne peut pas être nulle.</value>
  </data>
  <data name="RangeNameNotFoundError" xml:space="preserve">
    <value>Impossible de trouver le nom de la plage.</value>
  </data>
  <data name="DataElementPathCouldNotBeFound" xml:space="preserve">
    <value>Le chemin de {0} n'est pas valide. Il manque peut-être des éléments ou des sections obligatoires dans le schéma XML.</value>
  </data>
  <data name="EnumeratorOutOfRangeError" xml:space="preserve">
    <value>L'énumérateur est hors plage.</value>
  </data>
  <data name="CustomXmlPartWithNoRoot" xml:space="preserve">
    <value>Le composant XML personnalisé ne contient pas d'élément racine.</value>
  </data>
  <data name="PathArgumentError" xml:space="preserve">
    <value>Un chemin d'accès valide est requis.</value>
  </data>
  <data name="CustomXmlInvalidNamespaceBinding" xml:space="preserve">
    <value>{0} a un espace de nom {1} non valide.</value>
  </data>
  <data name="RangeValueNotSpecifiedError" xml:space="preserve">
    <value>Spécifiez une valeur de plage.</value>
  </data>
  <data name="FilenameNotSpecifiedError" xml:space="preserve">
    <value>Spécifiez un nom de fichier.</value>
  </data>
  <data name="WorksheetNotFoundError" xml:space="preserve">
    <value>Impossible de trouver la feuille de calcul.</value>
  </data>
  <data name="WorksheetPartNotFoundError" xml:space="preserve">
    <value>Impossible de trouver WorksheetPart.</value>
  </data>
  <data name="NumberingFormatsError" xml:space="preserve">
    <value>Le format de l'ID de numérotation personnalisé doit commencer à {0} et être répertorié dans un ordre consécutif.</value>
  </data>
  <data name="ColumnNameSizeError" xml:space="preserve">
    <value>L'étiquette de colonne doit avoir une large minimale de 1.</value>
  </data>
  <data name="ColumnLetterError" xml:space="preserve">
    <value>Le titre de la colonne {0} doit être une lettre entre A et Z.</value>
  </data>
  <data name="CustomXmlElementRemovedInDesign" xml:space="preserve">
    <value>Le composant XML personnalisé dans le document de présentation Word a une référence à un champ ou un DataItem ayant comme chemin d'accès {0}. Cet élément a été supprimé de l'ensemble de données d'état.</value>
  </data>
  <data name="IncompatibleWorkbookError" xml:space="preserve">
    <value>Impossible d'ouvrir le classeur Microsoft Excel. Cela peut être dû à l'une des raisons suivantes :
1. Le chemin d'accès au fichier est une adresse web. Vous devez naviguer jusqu'au fichier en utilisant la boîte de dialogue Ouvrir fichier, ou enregistrer le fichier localement puis l'ouvrir.
2. Le classeur n'est pas enregistré dans le format de fichier Open XML. Dans Microsoft Excel, enregistrez le classeur comme Classeur Excel (fichier .xlsx), puis réexécutez votre demande.
L'erreur suivante s'est produite : {0}.</value>
  </data>
  <data name="CorruptSpreadsheetDocumentError" xml:space="preserve">
    <value>Le classeur est corrompu. L'erreur suivante s'est produite : {0}.</value>
  </data>
  <data name="ColumnNameNotSpecifiedError" xml:space="preserve">
    <value>Spécifiez une étiquette de colonne.</value>
  </data>
  <data name="DataValidationFormulaNotSpecifiedError" xml:space="preserve">
    <value>Spécifiez une valeur de validation de données.</value>
  </data>
  <data name="RangeNameNotSpecifiedError" xml:space="preserve">
    <value>Spécifiez un nom de plage.</value>
  </data>
</root>